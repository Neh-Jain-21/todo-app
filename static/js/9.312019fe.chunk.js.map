{"version":3,"sources":["components/Navbar.js","actions/index.js"],"names":["Navbar","handleOpenSearch","dispatch","useDispatch","darkMode","useSelector","state","themeReducer","classes","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","display","search","position","borderRadius","shape","backgroundColor","alpha","palette","common","white","marginLeft","width","breakpoints","up","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","dflex","flexDirection","dark","useStyles","className","style","minHeight","container","direction","edge","variant","noWrap","onClick","changeTheme","type","addTodo","text","image","payload","completed","completeTodo","id","deleteTodo","editTodo","deleteSnack","data","activeSnack","completeSnack"],"mappings":"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","file":"static/js/9.312019fe.chunk.js","sourcesContent":["/** @format */\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n    makeStyles,\n    AppBar,\n    Toolbar,\n    IconButton,\n    Typography,\n    alpha,\n    Grid,\n} from \"@material-ui/core\";\n//icons\nimport { Menu, Search, Brightness7, Brightness3 } from \"@material-ui/icons\";\n//actions\nimport { changeTheme } from \"../actions/index\";\n\nconst Navbar = ({ handleOpenSearch }) => {\n    // from redux store\n    const dispatch = useDispatch();\n    const darkMode = useSelector((state) => {\n        return state.themeReducer.darkMode;\n    });\n\n    //dynamic css\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            flexGrow: 1,\n        },\n        menuButton: {\n            marginRight: theme.spacing(1),\n        },\n        title: {\n            flexGrow: 1,\n            display: \"flex\",\n        },\n        search: {\n            position: \"relative\",\n            borderRadius: theme.shape.borderRadius,\n            backgroundColor: alpha(theme.palette.common.white, 0.15),\n            \"&:hover\": {\n                backgroundColor: alpha(theme.palette.common.white, 0.25),\n            },\n            marginLeft: 0,\n            width: \"100%\",\n            [theme.breakpoints.up(\"sm\")]: {\n                marginLeft: theme.spacing(1),\n                width: \"auto\",\n            },\n        },\n        searchIcon: {\n            padding: theme.spacing(0, 2),\n            height: \"100%\",\n            position: \"absolute\",\n            pointerEvents: \"none\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n        },\n        inputRoot: {\n            color: \"inherit\",\n        },\n        inputInput: {\n            padding: theme.spacing(1, 1, 1, 0),\n            // vertical padding + font size from searchIcon\n            paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n            transition: theme.transitions.create(\"width\"),\n            width: \"100%\",\n            [theme.breakpoints.up(\"sm\")]: {\n                width: \"12ch\",\n                \"&:focus\": {\n                    width: \"20ch\",\n                },\n            },\n        },\n        dflex: {\n            display: \"flex\",\n            flexDirection: \"row\",\n            alignItems: \"center\",\n        },\n        dark: {\n            backgroundColor: darkMode ? \"#1F1F1F\" : \"\",\n        },\n    }));\n\n    const classes = useStyles();\n\n    return (\n        <>\n            {/* navbar */}\n            <div className={classes.root}>\n                <AppBar className={classes.dark} position=\"fixed\">\n                    <Toolbar style={{ minHeight: 48 }}>\n                        <Grid\n                            container\n                            direction=\"row\"\n                            justifyContent=\"space-between\"\n                            alignItems=\"center\"\n                        >\n                            <div className={classes.dflex}>\n                                <IconButton\n                                    edge=\"start\"\n                                    className={classes.menuButton}\n                                    color=\"inherit\"\n                                    aria-label=\"open drawer\"\n                                >\n                                    <Menu />\n                                </IconButton>\n                                <Typography\n                                    className={classes.title}\n                                    variant=\"h6\"\n                                    noWrap\n                                >\n                                    TASK LIST\n                                </Typography>\n                            </div>\n                            {/* Middle Buttons */}\n                            <div className={classes.dflex}>\n                                {darkMode ? (\n                                    <IconButton\n                                        edge=\"start\"\n                                        color=\"inherit\"\n                                        onClick={() => {\n                                            dispatch(changeTheme());\n                                        }}\n                                        aria-label=\"open drawer\"\n                                    >\n                                        <Brightness3 />\n                                    </IconButton>\n                                ) : (\n                                    <IconButton\n                                        edge=\"start\"\n                                        color=\"inherit\"\n                                        onClick={() => {\n                                            dispatch(changeTheme());\n                                        }}\n                                        aria-label=\"open drawer\"\n                                    >\n                                        <Brightness7 />\n                                    </IconButton>\n                                )}\n                                <IconButton\n                                    edge=\"end\"\n                                    color=\"inherit\"\n                                    onClick={() => {\n                                        handleOpenSearch();\n                                    }}\n                                    aria-label=\"open drawer\"\n                                >\n                                    <Search />\n                                </IconButton>\n                            </div>\n                        </Grid>\n                    </Toolbar>\n                </AppBar>\n            </div>\n        </>\n    );\n};\n\nexport default Navbar;\n","/** @format */\n\nexport const changeTheme = () => {\n    return {\n        type: \"CHANGE_THEME\",\n    };\n};\n\nexport const addTodo = (text, image) => {\n    return {\n        type: \"ADD_TODO\",\n        payload: { text: text, completed: false, image: image },\n    };\n};\n\nexport const completeTodo = (id) => {\n    return {\n        type: \"COMPLETE_TODO\",\n        payload: { id: id },\n    };\n};\n\nexport const deleteTodo = (id) => {\n    return {\n        type: \"DELETE_TODO\",\n        payload: { id: id },\n    };\n};\n\nexport const editTodo = (id, text) => {\n    return {\n        type: \"EDIT_TODO\",\n        payload: { id: id, text: text },\n    };\n};\n\nexport const deleteSnack = (data) => {\n    return {\n        type: \"DELETE_SNACK\",\n        payload: data,\n    };\n};\n\nexport const activeSnack = (data) => {\n    return {\n        type: \"ACTIVE_SNACK\",\n        payload: data,\n    };\n};\n\nexport const completeSnack = (data) => {\n    return {\n        type: \"COMPLETE_SNACK\",\n        payload: data,\n    };\n};\n"],"sourceRoot":""}